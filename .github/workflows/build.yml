name: Arcalm Linux Builder

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 */3 * *'

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.check.outputs.new_version }}
      arch_version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Get ISO version
        id: get_version
        run: |
          curl -sL https://mirrors.edge.kernel.org/archlinux/iso/latest/sha256sums.txt -o sha256sums.txt
          ISO_NAME=$(grep -oP 'archlinux-\K\d{4}\.\d{2}\.\d{2}(?=-x86_64.iso)' sha256sums.txt | head -1)
          echo "version=${ISO_NAME}" >> $GITHUB_OUTPUT

      - name: Check releases
        id: check
        run: |
          API_RESPONSE=$(curl -sfH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/latest" || echo 'null')
          LATEST_RELEASE_TAG=$(jq -r .tag_name <<< "$API_RESPONSE")
          CURRENT_VERSION="${{ steps.get_version.outputs.version }}"

          if [[ "$API_RESPONSE" == 'null' ]] || [[ "$LATEST_RELEASE_TAG" != "$CURRENT_VERSION" ]]; then
            echo "new_version=true" >> $GITHUB_OUTPUT
          else
            echo "new_version=false" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    needs: check-version
    if: needs.check-version.outputs.new_version == 'true'
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm base-devel git archiso sudo rsync reflector jq

          useradd -m -G wheel builduser
          echo 'builduser ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
          mkdir -p /build /work /out /aurbuild
          chown -R builduser:builduser /build /work /out /aurbuild

      - name: Build Calamares from AUR
        run: |
          sudo -u builduser bash -c '
            cd /aurbuild
            git clone https://aur.archlinux.org/calamares.git
            cd calamares
            makepkg -si --noconfirm --needed
          '

      - name: Create local Pacman repo with Calamares
        run: |
          mkdir -p /localrepo
          cp /aurbuild/calamares/*.pkg.tar.zst /localrepo/
          repo-add /localrepo/custom.db.tar.gz /localrepo/*.pkg.tar.zst

      - name: Prepare ISO build
        run: |
          cp -r /usr/share/archiso/configs/releng /build/custom-archiso
          chown -R builduser:builduser /build/custom-archiso

          # Add local repo to pacman.conf
          echo -e '\n[custom]\nSigLevel = Optional TrustAll\nServer = file:///localrepo' >> /build/custom-archiso/pacman.conf

          reflector --latest 20 --sort rate --protocol http,https --save /build/custom-archiso/airootfs/etc/pacman.d/mirrorlist

          # Add Calamares and KDE apps
          echo "
          calamares
          qt5-xmlpatterns
          kpmcore
          plasma-meta
          kde-applications
          networkmanager
          grub
          efibootmgr
          xdg-desktop-portal-kde
          " >> /build/custom-archiso/packages.x86_64

      - name: Add branding and customization
        run: |
          sudo -u builduser bash -c '
            cd /build/custom-archiso

            # Замена названия дистрибутива
            find . -type f -exec sed -i -e "s/Arch Linux/Arcalm Linux/g" {} \;
            find . -type f -exec sed -i -e "s/archlinux/arcalm/g" {} \;
            find . -type f -exec sed -i -e "s/ARCH_/ARCALM_/g" {} \;

            # Копирование Calamares-конфигов
            mkdir -p airootfs/etc/calamares
            cp -rv /__w/arcalm/arcalm/calamares/* airootfs/etc/calamares/

            # Добавление скрипта кастомизации
            mkdir -p airootfs/root
            cp -v /__w/arcalm/arcalm/airootfs/root/customize_airootfs.sh airootfs/root/ || true
            chmod +x airootfs/root/customize_airootfs.sh

            # Изменение имени ISO
            echo "MKISOFS_ARGS=\"-V ARCALM_$(date +%Y%m%d)\"" >> config.sh
          '

      - name: Build ISO
        run: |
          mkarchiso -v -w /work -o /out /build/custom-archiso
          echo "ISO_FILE=$(ls /out/*.iso)" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ needs.check-version.outputs.arch_version }}"
          name: "Arcalm Linux ${{ needs.check-version.outputs.arch_version }}"
          body: "Custom Arch-based Linux with Calamares installer\n\nBuilt with Plasma Desktop and KDE Applications"
          files: ${{ env.ISO_FILE }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup old releases
        if: success()
        run: |
          mapfile -t releases < <(
            curl -sH "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases?per_page=100" | jq -r '.[].id'
          )
          if [ "${#releases[@]}" -gt 3 ]; then
            for release_id in "${releases[@]:3}"; do
              curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/releases/$release_id"
            done
          fi
